<% include ../fragments/header.ejs %>
	<div class="container main-content">
		<h1>Devices for User: <%= user.username %></h1>
		<div class="row">
			<div class="col-sm"><strong>Name</strong></div>
			<div class="col-sm"><strong>Description</strong></div>
			<div class="col-sm"><strong>Capabilities</strong></div>
		</div>
		<% devices.forEach(function(device){ %>
		<div class="devrow">
			<div class="row">
				<div class="col-sm"><%= device.friendlyName %></div>
				<div class="col-sm"><%= device.description %></div>
				<div class="col-sm">
					<% device.capabilities.forEach(function(action){ %>
						<img class="action" src="/images/<%= action %>.png" title="<%= action %>">
					<% }); %>
				</div>
			</div>
			<div class="row" style="padding-left: 15px">
				<div>
					<button type="button" class="btn btn-secondary" onclick="edit('<%= device._id %>')">Edit</button>
					<button type="button" class="btn btn-secondary" onclick="deleteDevice('<%= device._id%>')">Delete</button>
				</div>
			</div>
		</div>
		<% }); %>
		<div style="padding-top: 10px;">
			<button type="button" class="btn btn-secondary" onclick="addDevice();">Add Device</button>
		</div>
		<p>After making any changes remember to ask Alexa to update devices it knows about by saying 
      "Alexa, discover devices"</p>
	</div>

	<!-- Modal -->
	<div class="modal fade" id="newDeviceModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalCenterTitle" aria-hidden="true">
		<div class="modal-dialog modal-dialog-centered" role="document">
		  <div class="modal-content">
			<div class="modal-header">
			  <h5 class="modal-title" id="newDeviceModalTitle">Add Device</h5>
			  <button type="button" class="close" data-dismiss="modal" aria-label="Close">
				<span aria-hidden="true">&times;</span>
			  </button>
			</div>
			<form class="form-device" id="form-device">
			<div class="modal-body">
				<div class="form-group">
					<input id="devID" type="hidden">
					<label for="friendlyName">Name: </label>
					<input id="friendlyName" class="form-control" type="text" required>
					<br>
					<label for="description">Description: </label>
					<br>
					<textarea id="description" class="form-control" required></textarea>
				</div>
				<!-- <fieldset class="action" id="capabilityType"> -->
				<div class="row" align="justify">
					<div class="col-sm">
						<fieldset class="form-group" id="capabilityType">
							<legend>Capabilities</legend>
							<div class="form-check">
									<input title="Input Control" type="checkbox" class="form-check-input" name="capabilities" id="BrightnessController" value="BrightnessController" onclick='checkCapability(this)'>
								<label class="form-check-label" for="BrightnessController"> Brightness Control </label>
								<br />
							</div>
							<div class="form-check">
									<input title="Input Control" type="checkbox" class="form-check-input" name="capabilities" id="ColorController" value="ColorController" onclick='checkCapability(this)'>
								<label class="form-check-label" for="ColorController"> Color Control </label>
								<br />
							</div>
							<div class="form-check">
									<input title="Input Control" type="checkbox" class="form-check-input" name="capabilities" id="ColorTemperatureController" value="ColorTemperatureController" onclick='checkCapability(this)'>
								<label class="form-check-label" for="ColorTemperatureController"> Color Temperature Control </label>
								<br />
							</div>
							<div class="form-check">
									<input title="Input Control" type="checkbox" class="form-check-input" name="capabilities" id="InputController" value="InputController" onclick='checkCapability(this)'>
								<label class="form-check-label" for="InputController"> Input Control </label>
								<br />
							</div>
							<div class="form-check">
									<input title="Lock Control" type="checkbox" class="form-check-input" name="capabilities" id="LockController" value="LockController" onclick='checkCapability(this)'>
								<label class="form-check-label" for="LockController"> Lock Control </label>
								<br />
							</div>
							<div class="form-check">
									<input title="Playback Control" type="checkbox" class="form-check-input" name="capabilities" id="PlaybackController" value="PlaybackController" onclick='checkCapability(this)'>
								<label class="form-check-label" for="PlaybackController"> Playback Control </label>
								<br />
							</div>
							<div class="form-check">
									<input title="Power Control" type="checkbox" class="form-check-input" name="capabilities" id="PowerController" value="PowerController" onclick='checkCapability(this)'>
								<label class="form-check-label" for="PowerController"> Power Control </label>
								<br />
							</div>
							<div class="form-check">
									<input title="Scene Control" type="checkbox" class="form-check-input" name="capabilities" id="SceneController" value="SceneController" onclick='checkCapability(this)'>
								<label class="form-check-label" for="SceneController"> Activity/ Scene </label>
								<br />
							</div>
							<div class="form-check">
									<input title="Step Speaker Control" type="checkbox" class="form-check-input" name="capabilities" id="StepSpeaker" value="StepSpeaker" onclick='checkCapability(this)'>
								<label class="form-check-label" for="StepSpeaker"> Speaker Control </label>
								<br />
							</div>
							<div class="form-check">
									<input title="Thermostat Control" type="checkbox" class="form-check-input" name="capabilities" id="ThermostatController" value="ThermostatController" onclick='checkCapability(this)'>
								<label class="form-check-label" for="ThermostatController"> Thermostat (1-Point) </label>
							</div>
							<div>
								<br>
								<label for="minimumValue" class="sr-only">Min Value: </label>
								<input id="minimumValue" class="form-control" placeholder="Min Value" pattern="^[0-9,_]{1,4}$" type="text" disabled>
								<br>
								<label for="maximumValue" class="sr-only">Max Value: </label>
								<input id="maximumValue" class="form-control" placeholder="Max Value" pattern="^[0-9,_]{1,4}$" type="text" disabled>
							</div>
							<div class="form-check form-check-inline" style="padding-left:5px;">
								<input class="form-check-input" type="radio" name="radioScale" id="Celcius" value="Celcius" disabled>
								<br>
								<label class="form-check-label" for="Celcius">°Celcius</label>
							</div>
							<div class="form-check form-check-inline" style="padding-top: 10px;">
								<input class="form-check-input" type="radio" name="radioScale" id="Farenheit" value="Farenheit" disabled>
								<label class="form-check-label" for="Farenheit">°Farenheit</label>
							</div>
						</fieldset>
					</div>
					<div class="col-sm">
					<fieldset class="form-group">
						<legend>Alexa App Icon</legend>
						<!-- <fieldset class="action" id="capabilityType"> -->
						<div class="form-check">
							<input type="radio" class="form-check-input" id="ACTIVITY_TRIGGER" name="appType" value="ACTIVITY_TRIGGER">
							<label class="form-check-label" for="ACTIVITY_TRIGGER">Activity/ Scene </label>
							<br />
						</div>
						<div class="form-check">
								<input type="radio" class="form-check-input" id="LIGHT" name="appType" value="LIGHT">
								<label class="form-check-label" for="LIGHT">Light </label>
								<br />
						</div>
						<div class="form-check">
								<input type="radio" class="form-check-input" id="SMARTLOCK" name="appType" value="SMARTLOCK">
								<label class="form-check-label" for="SMARTLOCK">Smart Lock </label>
								<br />
						</div>
						<div class="form-check">
								<input type="radio" class="form-check-input" id="SMARTPLUG" name="appType" value="SMARTPLUG">
								<label class="form-check-label" for="SMARTPLUG">Smart Plug </label>
								<br />
							</div>
						<div class="form-check">
							<input type="radio" class="form-check-input" id="SWITCH" name="appType" value="SWITCH">
							<label class="form-check-label" for="SWITCH">Smart Switch </label>
							<br />
						</div>
						<div class="form-check">
							<input type="radio" class="form-check-input" id="SPEAKER" name="appType" value="SPEAKER">
							<label class="form-check-label" for="SPEAKER">Speaker </label>
							<br />
						</div>
						<div class="form-check">
							<input type="radio" class="form-check-input" id="TV" name="appType" value="TV">
							<label class="form-check-label" for="TV">TV </label>
							<br />
						</div>
						<div class="form-check">
							<input type="radio" class="form-check-input" id="THERMOSTAT" name="appType" value="THERMOSTAT">
							<label class="form-check-label" for="THERMOSTAT">Thermostat </label>
						</div>
					</fieldset>
				</div>
			</div>
			<div class="modal-footer">
				<button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
				<button class="btn btn-primary" id="submit" type="submit" value="submit">Save</button>
				<!-- <button type="button" class="btn btn-primary" onclick='saveDevice()'>Save</button> -->
			</div>
			</form>
			</div>
		  </div>
		</div>
	</div>

	<script>
			
	$("#form-device").submit(function(e) {
		e.preventDefault();
		saveDevice()
	});

	// Enable/ disable minimumValue/ maximumValue and scale elements
	$("#ThermostatController").change(function(e) {
		if ( $(this).is(':checked') == false) {
			$('#maximumValue').attr("disabled", "disabled"); 
			$('#minimumValue').attr("disabled", "disabled");
			$('#Celcius').attr("disabled", "disabled"); 
			$('#Farenheit').attr("disabled", "disabled");
			$("#maximumValue").prop('required',false);
			$("#minimumValue").prop('required',false);
			$("#Celcius").prop('required',false);
			$("#Farenheit").prop('required',false);
		}
		else {
			$('#maximumValue').removeAttr("disabled"); 
			$('#minimumValue').removeAttr("disabled");
			$('#Celcius').removeAttr("disabled");
			$('#Farenheit').removeAttr("disabled");
			$("#maximumValue").prop('required',true);
			$("#minimumValue").prop('required',true);
			$("#Celcius").prop('required',true);
			$("#Farenheit").prop('required',true);
		}
	});

	// Enable/ disable minimumValue/ maximumValue elements
	$("#ColorTemperatureController").change(function(e) {
		if ( $(this).is(':checked') == false ) {
			$('#maximumValue').attr("disabled", "disabled"); 
			$('#minimumValue').attr("disabled", "disabled");
			$("#maximumValue").prop('required',false);
			$("#minimumValue").prop('required',false);
		}
		else {
			$('#maximumValue').removeAttr("disabled"); 
			$('#minimumValue').removeAttr("disabled");
			$("#maximumValue").prop('required',true);
			$("#minimumValue").prop('required',true);
		}
	});

	function saveDevice() {
		var devID = $('#devID').val();
		// Add New Device
		if ( devID === "") {
			var device = {
				capabilities: [],
				displayCategories: [],
			};
			device.friendlyName = $('#friendlyName').val();
			device.description = $('#description').val();

			if ($('#ThermostatController').prop('checked') || $('#ColorTemperatureController').prop('checked')) {
				var scale;
				$('input[name=radioScale]').each(function(index){
					if (this.checked) {
						scale = this.value;
					}
				});
			}
			if ($('#ThermostatController').prop('checked') || $('#ColorTemperatureController').prop('checked')) {
				device.validRange = {
						minimumValue: $('#minimumValue').val(),
						maximumValue: $('#maximumValue').val(),
						scale: scale
					}
			}

			$('input[name=capabilities]').each(function(index){
				if (this.checked) {
					device.capabilities.push(this.value);
				}
			});
			$('input[name=appType]').each(function(index){
				if (this.checked) {
					device.displayCategories.push(this.value);
				}
			});

			if (device.friendlyName && device.description && device.capabilities.length > 0) {
				console.log("ajax put next");
				$.ajax({
					url:"/devices",
					type: 'PUT',
					data: JSON.stringify(device),
					dataType: 'json',
					contentType: "application/json",
					success: function(data){
						console.log("put response");
						console.log(data);
						//reload
						document.location.reload();
						console.log("reload page");
					}
				}).fail(function(){
					alert("failed to create device");
				});
			} else {
				alert("Name or desciption can not be empty and at least one action is needed");
			}
		} else {
			// Modify Existing Device
			var device = devices[devID];
			device.description = $('#description').val();

			if ($('#ThermostatController').prop('checked') || $('#ColorTemperatureController').prop('checked')) {
				var scale;
				$('input[name=radioScale]').each(function(index){
					if (this.checked) {
						scale = this.value;
					}
				});
			}
			if ($('#ThermostatController').prop('checked') || $('#ColorTemperatureController').prop('checked')) {
				device.validRange = {
						minimumValue: $('#minimumValue').val(),
						maximumValue: $('#maximumValue').val(),
						scale: scale
					}
			}

			device.capabilities = [];
			$('input[name=capabilities]').each(function(index){
				if (this.checked) {
					device.capabilities.push(this.value);
				}
			});
			device.displayCategories = [];
			$('input[name=appType]').each(function(index){
				if (this.checked) {
					device.displayCategories.push(this.value);
				}
			});
			if (device.friendlyName && device.description && device.capabilities.length > 0) {
				//post update
				$.ajax({
					url: '/device/' + device._id,
					type: 'POST',
					data: JSON.stringify(device),
					dataType: 'json',
					contentType: "application/json",
					success: function(data){
						console.log("post response");
						console.log(data);
						//reload
						document.location.reload();
					},
				});
				console.log(device);
			} else {
				alert("Name or desciption can not be empty and at least one action is needed");
			}
		}
		//$('#newDeviceModal').hide();
	}
	
	function addDevice() {
		clearDevice();
		checkCapability();
		$("#newDeviceModal").modal();
		//$("#dialog").dialog("open");
	}

	function clearDevice() {
		$('#devID').val("");
		$('#friendlyName').val("");
		$('#friendlyName').prop('readonly', false);
		$('#description').val("");
		$('input[name=capabilities]').each(function(index){
			this.checked = false;
		});
		$('input[name=appType]').each(function(index) {
		  this.checked = false;
		});
		$('#maximumValue').val(""); 
		$('#minimumValue').val("");
		$('#maximumValue').attr("disabled", "disabled"); 
		$('#minimumValue').attr("disabled", "disabled");
		$('#Celcius').attr("disabled", "disabled"); 
		$('#Farenheit').attr("disabled", "disabled");
		$("#maximumValue").prop('required',false);
		$("#minimumValue").prop('required',false);
		$("#Celcius").prop('required',false);
		$("#Farenheit").prop('required',false);
		$('input[name=radioScale]').each(function(index){
			this.checked = false;
		});
		// Update Form Validation Requirements ??
	}

	function edit(id) {
		clearDevice();
		$("#newDeviceModal").modal();
		var device = devices[id];
		$('#devID').val(device._id);
		$('#friendlyName').val(device.friendlyName);
		$('#friendlyName').prop('readonly', true);
		$('#description').val(device.description);
		device.capabilities.forEach(function(action){
			$('#' + action).prop('checked',true);
		});
		device.displayCategories.forEach(function(type){
			$('#' + type).prop('checked',true);
		});

		// Handle min/max and scale values
		if (device.hasOwnProperty('validRange')) {
			validRange = device.validRange;
			if (validRange.hasOwnProperty('scale')) {
				$('#Celcius').removeAttr("disabled");
				$('#Farenheit').removeAttr("disabled");
				$("#Celcius").prop('required',true);
				$("#Farenheit").prop('required',true);
				$('#' + validRange.scale).prop('checked',true);
			}
			if (validRange.hasOwnProperty('maximumValue')) {
				$("#maximumValue").prop('required',true);
				$('#maximumValue').removeAttr("disabled"); 
				$("#maximumValue").val(validRange.maximumValue);
			}
			if (validRange.hasOwnProperty('minimumValue')) {
				$('#minimumValue').removeAttr("disabled");
				$("#minimumValue").prop('required',true);
				$("#minimumValue").val(validRange.minimumValue);
			}
			// Update Form Validation Requirements ??
		}
	}

	function deleteDevice(id) {
		var answer = confirm("Are you sure you want to delete this device?");
		if(answer) {
			$.ajax({
				url:"/device/" + id,
				type: 'DELETE',
				success: function(data){
					document.location.reload();
				}
			});
		}
	}


	// Place restrictions here - i.e. StepVolume/ PlaybackControl can't go with ThermostatControl/ SceneControl
	function checkCapability(check) {
		var brightness = $('#BrightnessController').prop('checked');
		var color = $('#ColorController').prop('checked');
		var colorTemperature = $('#ColorTemperatureController').prop('checked');
		var input = $('#InputController').prop('checked');
		var lock = $('#LockController').prop('checked');
		var scene = $('#SceneController').prop('checked');
		var playback = $('#PlaybackController').prop('checked');
		var power = $('#PowerController').prop('checked');
		var stepSpeaker = $('#StepSpeaker').prop('checked');
		var thermostat = $('#ThermostatController').prop('checked');

		// Add else if here with restrictions
		if (scene && power || scene && color || scene && colorTemperature || scene && input || scene && power || scene && playback || scene && stepSpeaker) {
			alert("Activity/ Scene selected, this must be the only capability!");
			// Auto-select Activity
			$('#ACTIVITY_TRIGGER').prop('checked', true);
			$('#LIGHT').prop('checked', false);
			$('#SMARTLOCK').prop('checked', false);
			$('#SMARTPLUG').prop('checked', false);
			$('#SPEAKER').prop('checked', false);
			$('#SWITCH').prop('checked', false);
			$('#THERMOSTAT').prop('checked', false);
			$('#TV').prop('checked', false);
			// De-select other Capabilities Activity
			$('#BrightnessController').prop('checked', false);
			$('#ColorController').prop('checked', false);
			$('#ColorTemperatureController').prop('checked', false);
			$('#InputController').prop('checked', false);
			$('#LockController').prop('checked', false);
			$('#PlaybackController').prop('checked', false);
			$('#PowerController').prop('checked', false);
			$('#StepSpeaker').prop('checked', false);
			$('#ThermostatController').prop('checked', false);
			return false;
		}
		else if (thermostat && power || thermostat && color || thermostat && colorTemperature || thermostat && input || thermostat && scene || thermostat && power || thermostat && playback || thermostat && stepSpeaker) {
			alert("Thermostat selected, this must be the only capability!");
			// Auto-select Activity
			$('#ACTIVITY_TRIGGER').prop('checked', false);
			$('#LIGHT').prop('checked', false);
			$('#SMARTLOCK').prop('checked', false);
			$('#SMARTPLUG').prop('checked', false);
			$('#SPEAKER').prop('checked', false);
			$('#SWITCH').prop('checked', false);
			$('#THERMOSTAT').prop('checked', true);
			$('#TV').prop('checked', false);
			// De-select other Capabilities Activity
			$('#BrightnessController').prop('checked', false);
			$('#ColorController').prop('checked', false);
			$('#ColorTemperatureController').prop('checked', false);
			$('#InputController').prop('checked', false);
			$('#LockController').prop('checked', false);
			$('#PlaybackController').prop('checked', false);
			$('#PowerController').prop('checked', false);
			$('#SceneController').prop('checked', false);
			$('#StepSpeaker').prop('checked', false);
			return false;
		}
		else if (lock && power || lock && color || lock && colorTemperature || lock && input || lock && scene || lock && power || lock && playback || lock && stepSpeaker || lock && thermostat) {
			alert("Lock selected, this must be the only capability!");
			// Auto-select Activity
			$('#ACTIVITY_TRIGGER').prop('checked', false);
			$('#LIGHT').prop('checked', false);
			$('#SMARTLOCK').prop('checked', true);
			$('#SMARTPLUG').prop('checked', false);
			$('#SPEAKER').prop('checked', false);
			$('#SWITCH').prop('checked', false);
			$('#THERMOSTAT').prop('checked', false);
			$('#TV').prop('checked', false);
			// De-select other Capabilities Activity
			$('#BrightnessController').prop('checked', false);
			$('#ColorController').prop('checked', false);
			$('#ColorTemperatureController').prop('checked', false);
			$('#InputController').prop('checked', false);
			$('#PlaybackController').prop('checked', false);
			$('#PowerController').prop('checked', false);
			$('#SceneController').prop('checked', false);
			$('#StepSpeaker').prop('checked', false);
			$('#ThermostatController').prop('checked', false);
		}
		else {
			if (input) {
				// Auto-select Activity (can be changed by user)
				$('#ACTIVITY_TRIGGER').prop('checked', false);
				$('#LIGHT').prop('checked', false);
				$('#SMARTLOCK').prop('checked', false);
				$('#SMARTPLUG').prop('checked', false);
				$('#SPEAKER').prop('checked', false);
				$('#SWITCH').prop('checked', false);
				$('#THERMOSTAT').prop('checked', false);
				$('#TV').prop('checked', true);
			}
			else if (scene) {
				// Auto-select Activity (can be changed by user)
				$('#ACTIVITY_TRIGGER').prop('checked', true);
				$('#LIGHT').prop('checked', false);
				$('#SMARTLOCK').prop('checked', false);
				$('#SMARTPLUG').prop('checked', false);
				$('#SPEAKER').prop('checked', false);
				$('#SWITCH').prop('checked', false);
				$('#THERMOSTAT').prop('checked', false);
				$('#TV').prop('checked', false);
			}
			else if (power) {
				// Auto-select Activity (can be changed by user)
				$('#ACTIVITY_TRIGGER').prop('checked', false);
				$('#LIGHT').prop('checked', false);
				$('#SMARTLOCK').prop('checked', false);
				$('#SMARTPLUG').prop('checked', false);
				$('#SPEAKER').prop('checked', false);
				$('#SWITCH').prop('checked', true);
				$('#THERMOSTAT').prop('checked', false);
				$('#TV').prop('checked', false);
			}
			else if (stepSpeaker) {
				// Auto-select Activity (can be changed by user)
				$('#ACTIVITY_TRIGGER').prop('checked', false);
				$('#LIGHT').prop('checked', false);
				$('#SMARTLOCK').prop('checked', false);
				$('#SMARTPLUG').prop('checked', false);
				$('#SPEAKER').prop('checked', true);
				$('#SWITCH').prop('checked', false);
				$('#THERMOSTAT').prop('checked', false);
				$('#TV').prop('checked', false);
			}
			else if (playback) {
				// Auto-select Activity (can be changed by user)
				$('#ACTIVITY_TRIGGER').prop('checked', false);
				$('#LIGHT').prop('checked', false);
				$('#SMARTLOCK').prop('checked', false);
				$('#SMARTPLUG').prop('checked', false);
				$('#SPEAKER').prop('checked', false);
				$('#SWITCH').prop('checked', false);
				$('#THERMOSTAT').prop('checked', false);
				$('#TV').prop('checked', true);
			}
			else if (thermostat) {
				// Auto-select Activity (can be changed by user)
				$('#ACTIVITY_TRIGGER').prop('checked', false);
				$('#LIGHT').prop('checked', false);
				$('#SMARTLOCK').prop('checked', false);
				$('#SMARTPLUG').prop('checked', false);
				$('#SPEAKER').prop('checked', false);
				$('#SWITCH').prop('checked', false);
				$('#THERMOSTAT').prop('checked', true);
				$('#TV').prop('checked', false);
			}
			else if (lock) {
				// Auto-select Activity (can be changed by user)
				$('#ACTIVITY_TRIGGER').prop('checked', false);
				$('#LIGHT').prop('checked', false);
				$('#SMARTLOCK').prop('checked', true);
				$('#SMARTPLUG').prop('checked', false);
				$('#SPEAKER').prop('checked', false);
				$('#SWITCH').prop('checked', false);
				$('#THERMOSTAT').prop('checked', false);
				$('#TV').prop('checked', false);
			}
			else {
				// De-select ALL Activity
				$('#ACTIVITY_TRIGGER').prop('checked', false);
				$('#LIGHT').prop('checked', false);
				$('#SMARTLOCK').prop('checked', false);
				$('#SMARTPLUG').prop('checked', false);
				$('#SPEAKER').prop('checked', false);
				$('#SWITCH').prop('checked', false);
				$('#THERMOSTAT').prop('checked', false);
				$('#TV').prop('checked', false);
				return false;
			}
		}
	}

	var devices = {};
	<%- JSON.stringify(devices) %>.forEach(function(device){
		devices[device._id] = device;
	});
	</script>
<% include ../fragments/footer.ejs %>